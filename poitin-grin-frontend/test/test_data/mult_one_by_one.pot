main = let i = 1 in
        let j = 1 in
         let k = mul in
            isOne (k i j);

isOne x = case x of
    Succ(y) -> (case y of
        Zero -> True
        |Succ(i) -> False)
    |Zero -> False;

plus x y = case x of
              Zero    -> y
            | Succ(x) -> Succ(plus x y);

mul x y = case x of
             Zero    -> Zero
           | Succ(x) -> plus y (mul x y)
